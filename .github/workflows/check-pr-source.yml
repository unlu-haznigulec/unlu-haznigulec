name: PR Validation and Auto-Propagate

on:
  pull_request:
    types: [opened, synchronize, reopened, closed]

jobs:
  validate-branch:
    if: github.event.action != 'closed' && github.event.pull_request.user.login != 'github-actions[bot]'
    runs-on: ubuntu-latest
    steps:
      - name: Validate source branch rules
        run: |
          echo "🔍 HEAD: ${{ github.head_ref }}"
          echo "🎯 BASE: ${{ github.base_ref }}"

          BASE="${{ github.base_ref }}"
          HEAD="${{ github.head_ref }}"

          if [[ "$BASE" == "release" && "$HEAD" != "dev" ]]; then
            echo "::error::❌ Only 'dev' is allowed to open PRs to 'release'"
            exit 1
          fi

          if [[ "$BASE" == "main" && "$HEAD" != "release" && "$HEAD" != "hotfix" ]]; then
            echo "::error::❌ Only 'release' or 'hotfix' can open PRs to 'main'"
            exit 1
          fi

          echo "✅ PR source is allowed."

  propagate-branches:
    if: github.event.action == 'closed' && github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Extract source branch name
        id: source_branch
        run: echo "branch=${{ github.event.pull_request.head.ref }}" >> $GITHUB_OUTPUT

      - name: Sync main to dev/release/hotfix if needed
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}
        run: |
          SRC=${{ steps.source_branch.outputs.branch }}
          echo "🔁 PR was merged from: $SRC"

          close_existing_pr() {
            local BASE=$1
            local HEAD=main
            echo "🔍 Checking for existing PR: $HEAD → $BASE"
            pr_url=$(gh pr list --base "$BASE" --head "$HEAD" --state open --json url -q '.[0].url')
            if [[ -n "$pr_url" ]]; then
              echo "⚠️ Existing PR found: $pr_url — closing it..."
              gh pr close "$pr_url" --comment "🔁 Replaced by a new sync PR from main."
            fi
          }

          create_sync_pr() {
            local BASE=$1
            echo "📤 Creating PR: main → $BASE"
            gh pr create --base "$BASE" --head main \
              --title "🔄 Sync: main → $BASE (from $SRC)" \
              --body "Automated PR after $SRC merged to main"
          }

          if [[ "$SRC" == "hotfix" ]]; then
            echo "📌 hotfix merged to main, syncing to dev & release..."
            close_existing_pr dev && create_sync_pr dev
            close_existing_pr release && create_sync_pr release

          elif [[ "$SRC" == "release" ]]; then
            echo "📌 release merged to main, syncing to dev & hotfix..."
            close_existing_pr dev && create_sync_pr dev
            close_existing_pr hotfix && create_sync_pr hotfix

          else
            echo "ℹ️ No downstream sync rules for source branch '$SRC'."
          fi
