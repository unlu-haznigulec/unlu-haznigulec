syntax="proto2";
package messages;

option java_package = "com.matriksdata.radix.messages";
option java_outer_classname = "Symbol";

message SymbolMessage {
  required sint32 symbolId = 1;
  optional string symbolCode = 2; // sembol kodu
  optional string symbolDesc = 3; // sembol açıklaması
  optional string updateDate = 4; // date format: yyyy-MM-ddTHH:mm:ssZ
  optional double bid = 5; // son alış fiyatı
  optional double ask = 6; // son satış fiyatı
  optional double low = 7; // seans içinde işlem gören en düşük fiyat
  optional double high = 8; // seans içinde işlem gören en yüksek fiyat
  optional double last = 9; // son fiyat (islem fiyati)
  optional double dayClose = 10; // bir önceki günün kapanış fiyatı
  optional int32  fractionCount = 11; // fiyat için virgülden sonraki basamak sayısı.
  optional double dailyLow = 12; // gun içinde işlem gören en düşük fiyat
  optional double dailyHigh = 13; // gun içinde işlem gören en yüksek fiyat
  optional double quantity = 14; // işlem adedi
  optional double volume = 15; // işlem hacmi
  optional double difference = 16; // fark = işlem gören son fiyat - onceki gunun kapanis fiyati
  optional double differencePercent = 17; // fark yuzdesi
  optional double days7DifPer = 18; // 7 gunluk fark yuzdesi
  optional double days30DifPer = 19; // 30 gunluk fark yuzdesi
  optional double week52DifPer = 20; // 52 haftalik fark yuzdesi
  optional double monthHigh = 21; // ay icindeki en yuksek deger
  optional double monthLow = 22; // ay icindeki en dusuk deger
  optional double yearHigh = 23; // yil icindeki en yuksek deger
  optional double yearLow = 24; // yil icndeki en dusuk deger
  optional double priceMean = 25; // gun icindeki agirlikli fiyat ortalamasi
  optional double limitUp = 26; // tavan fiyat
  optional double limitDown = 27; // taban fiyat
  optional double netProceeds = 28; // Net Kar
  optional double priceProceeds = 29; // F/K (Fiyat/Kazanç)
  optional double marketValue = 30; // Piyasa Degeri
  optional double marketValueUsd = 31; // Piyasa Degeri USD
  optional double marValBookVal = 32; // PD/DD (Piyasa Değeri/Defter Değeri)
  optional double equity = 33; // Özsermaye
  optional double capital = 34; // Sermaye
  optional double circulationShare = 35; // Dolasimdaki Pay
  optional double circulationSharePer = 36; // Dolasimdaki pay yuzdesi
  optional string symbolGroup = 37; // Sembol grubu A,B,C,D
  optional double dailyVolume = 38; // Günlük işlem hacmi
  optional bool   sessionIsOpen = 39; // true false
  optional bool   openForTrade = 40  [deprecated=true]; // true false
  optional double priceStep = 41; // fiyat adimi
  optional double basePrice = 42; 
  optional string symbolType = 43; // Symbol tipi
  optional int32 tradeFraction = 44;
  optional string stockSymbolCode = 45; // Sembolün borsa kodu
  optional string tradeDate = 46;
  optional double open = 47;
  optional double dailyQuantity = 48; // Gün icing top lam lot (adet)
  optional string actionType = 49; 
  optional int32 brutSwap = 50  [deprecated=true];
  optional double totalTradeCount = 51;
  optional double lastQuantity = 52; // Son işlem adedi
  optional double weekLow = 53; // Haftalık Düşük
  optional double weekHigh = 54; // Haftalık yüksek
  optional double weekClose = 55; // Önceki hafta kapanış fiyatı
  optional double monthClose = 56; // Önceki ay kapanış fiyatı
  optional double yearClose = 57; // Önceki yıl kapanış fiyatı
  optional string period = 58;
  optional double shiftedNetProceed = 59;
  optional int64 askSize = 60; 
  optional int64 bidSize = 61;
  optional double eqPrice = 62;  // Teorik eşleşme fiyatı
  optional double eqQuantity = 63; // Teorik eşleşme adet
  optional double eqRemainingBidQuantity = 64; // Teorik eşleşme kalan alış adedi
  optional double eqRemainingAskQuantity = 65; // Teorik eşleşme kalan satış adedi
  optional double prevYearClose = 66;
  optional int32  direction = 67;
  optional double weekPriceMean = 68;
  optional double monthPriceMean = 69;
  optional double yearPriceMean = 70;
  optional double beta100 = 71;
  optional double cashNetDividend = 72;
  optional double dividendYield = 73;
  optional int32 stockStatus = 74;
  optional double incrementalQuantity = 75 [ default = 0.0];

  enum PublishReason{
      UPDATE = 0;
      REFRESH = 1;
  }
  optional PublishReason publishReason = 76 [default = UPDATE];
  optional double xu030Weight = 77;
  optional double xu050Weight = 78;
  optional double xu100Weight = 79;
  optional double netDebt = 80;
  optional double shiftedEbitda = 81;
}

/*
ALERT
DISCONNECT
MULTICONNECT
METAUPDATE
*/

/*
stockstatus meaning:
1 Closed
2 Continuous
3 Uncrossing
4 OpeningSession
5 ClosingSession
6 Break
7 ContinuousLastTrdPr
8 SinglePriceAuction
9 PrimaryContinuous
10 Suspend
11 OddContLastTrdPr
12 OddContinuous
13 OrderCollectionPeriodAfterCB
14 UncrossOneSidedBuyBackHidden
15 UncrossOneSidedBuyBackOpen
16 UncrossOneSidedIssueHidden
17 UncrossOneSidedIssueOpen
18 AfterOneSidedAuctionPeriod
20 SinglePriceUncrossingProcessStarted
21 OneSidedAuctionPeriod
22 UncrossIssuingOpen
23 UncrossIssuingHidden
24 UncrossBuyBackOpen
25 UncrossBuyBackHidden
26 NonTradablePeriod
27 DisseminationOfPriceLimits
28 Derivatives_SettlementPriceDissemination
29 FixedIncome_EOD
30 FixedIncome_SOD
31 Derivatives_DataFeed
32 Derivatives_SettlementPriceMatching
33 NonTradingPeriod_AfterHoursMorningSession
34 NonTradingPeriod_AfterHoursEveningSession
35 Continuous_AfterHoursMorningSession
36 Continuous_AfterHoursEveningSession
37 Closed_AfterHoursMorningSession
38 Closed_AfterHoursEveningSession
39 Continuous_AfterCutoff
40 Reserved1
41 Reserved2
42 Reserved3
43 Reserved4
44 Reserved5
45 Reserved6
46 Reserved7
47 PMD_SessionClosed
48 FixedIncome_RepoQuotation
49 FixedIncome_SessionClosed
50 Derivatives_SessionClosed
51 OpeningSession_woEQ
52 OneSidedAuctionPeriod_woEQ
53 OrderCollectionPeriodAfterCB_woEQ
54 ClosingSession_woEQ
55 SinglePriceAuction_woEQ
99 StateResetStart
*/